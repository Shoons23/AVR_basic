
PinChangeInterrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800200  000003dc  00000470  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003dc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800218  00800218  00000488  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000109d  00000000  00000000  000005b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c5c  00000000  00000000  0000164d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000597  00000000  00000000  000022a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000134  00000000  00000000  00002840  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000069b  00000000  00000000  00002974  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000442  00000000  00000000  0000300f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00003451  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	65 c0       	rjmp	.+202    	; 0xcc <__ctors_end>
   2:	00 00       	nop
   4:	80 c0       	rjmp	.+256    	; 0x106 <__bad_interrupt>
   6:	00 00       	nop
   8:	7e c0       	rjmp	.+252    	; 0x106 <__bad_interrupt>
   a:	00 00       	nop
   c:	7c c0       	rjmp	.+248    	; 0x106 <__bad_interrupt>
   e:	00 00       	nop
  10:	7a c0       	rjmp	.+244    	; 0x106 <__bad_interrupt>
  12:	00 00       	nop
  14:	78 c0       	rjmp	.+240    	; 0x106 <__bad_interrupt>
  16:	00 00       	nop
  18:	76 c0       	rjmp	.+236    	; 0x106 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	74 c0       	rjmp	.+232    	; 0x106 <__bad_interrupt>
  1e:	00 00       	nop
  20:	72 c0       	rjmp	.+228    	; 0x106 <__bad_interrupt>
  22:	00 00       	nop
  24:	0f c1       	rjmp	.+542    	; 0x244 <__vector_9>
  26:	00 00       	nop
  28:	6e c0       	rjmp	.+220    	; 0x106 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6c c0       	rjmp	.+216    	; 0x106 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6a c0       	rjmp	.+212    	; 0x106 <__bad_interrupt>
  32:	00 00       	nop
  34:	68 c0       	rjmp	.+208    	; 0x106 <__bad_interrupt>
  36:	00 00       	nop
  38:	66 c0       	rjmp	.+204    	; 0x106 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	64 c0       	rjmp	.+200    	; 0x106 <__bad_interrupt>
  3e:	00 00       	nop
  40:	62 c0       	rjmp	.+196    	; 0x106 <__bad_interrupt>
  42:	00 00       	nop
  44:	60 c0       	rjmp	.+192    	; 0x106 <__bad_interrupt>
  46:	00 00       	nop
  48:	5e c0       	rjmp	.+188    	; 0x106 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5c c0       	rjmp	.+184    	; 0x106 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5a c0       	rjmp	.+180    	; 0x106 <__bad_interrupt>
  52:	00 00       	nop
  54:	58 c0       	rjmp	.+176    	; 0x106 <__bad_interrupt>
  56:	00 00       	nop
  58:	56 c0       	rjmp	.+172    	; 0x106 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	54 c0       	rjmp	.+168    	; 0x106 <__bad_interrupt>
  5e:	00 00       	nop
  60:	52 c0       	rjmp	.+164    	; 0x106 <__bad_interrupt>
  62:	00 00       	nop
  64:	50 c0       	rjmp	.+160    	; 0x106 <__bad_interrupt>
  66:	00 00       	nop
  68:	4e c0       	rjmp	.+156    	; 0x106 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4c c0       	rjmp	.+152    	; 0x106 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4a c0       	rjmp	.+148    	; 0x106 <__bad_interrupt>
  72:	00 00       	nop
  74:	48 c0       	rjmp	.+144    	; 0x106 <__bad_interrupt>
  76:	00 00       	nop
  78:	46 c0       	rjmp	.+140    	; 0x106 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	44 c0       	rjmp	.+136    	; 0x106 <__bad_interrupt>
  7e:	00 00       	nop
  80:	42 c0       	rjmp	.+132    	; 0x106 <__bad_interrupt>
  82:	00 00       	nop
  84:	40 c0       	rjmp	.+128    	; 0x106 <__bad_interrupt>
  86:	00 00       	nop
  88:	3e c0       	rjmp	.+124    	; 0x106 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3c c0       	rjmp	.+120    	; 0x106 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3a c0       	rjmp	.+116    	; 0x106 <__bad_interrupt>
  92:	00 00       	nop
  94:	38 c0       	rjmp	.+112    	; 0x106 <__bad_interrupt>
  96:	00 00       	nop
  98:	36 c0       	rjmp	.+108    	; 0x106 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	34 c0       	rjmp	.+104    	; 0x106 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	32 c0       	rjmp	.+100    	; 0x106 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	30 c0       	rjmp	.+96     	; 0x106 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2e c0       	rjmp	.+92     	; 0x106 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2c c0       	rjmp	.+88     	; 0x106 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2a c0       	rjmp	.+84     	; 0x106 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	28 c0       	rjmp	.+80     	; 0x106 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	26 c0       	rjmp	.+76     	; 0x106 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	24 c0       	rjmp	.+72     	; 0x106 <__bad_interrupt>
  be:	00 00       	nop
  c0:	22 c0       	rjmp	.+68     	; 0x106 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	20 c0       	rjmp	.+64     	; 0x106 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1e c0       	rjmp	.+60     	; 0x106 <__bad_interrupt>
	...

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d1 e2       	ldi	r29, 0x21	; 33
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
  d8:	12 e0       	ldi	r17, 0x02	; 2
  da:	a0 e0       	ldi	r26, 0x00	; 0
  dc:	b2 e0       	ldi	r27, 0x02	; 2
  de:	ec ed       	ldi	r30, 0xDC	; 220
  e0:	f3 e0       	ldi	r31, 0x03	; 3
  e2:	00 e0       	ldi	r16, 0x00	; 0
  e4:	0b bf       	out	0x3b, r16	; 59
  e6:	02 c0       	rjmp	.+4      	; 0xec <__do_copy_data+0x14>
  e8:	07 90       	elpm	r0, Z+
  ea:	0d 92       	st	X+, r0
  ec:	a8 31       	cpi	r26, 0x18	; 24
  ee:	b1 07       	cpc	r27, r17
  f0:	d9 f7       	brne	.-10     	; 0xe8 <__do_copy_data+0x10>

000000f2 <__do_clear_bss>:
  f2:	22 e0       	ldi	r18, 0x02	; 2
  f4:	a8 e1       	ldi	r26, 0x18	; 24
  f6:	b2 e0       	ldi	r27, 0x02	; 2
  f8:	01 c0       	rjmp	.+2      	; 0xfc <.do_clear_bss_start>

000000fa <.do_clear_bss_loop>:
  fa:	1d 92       	st	X+, r1

000000fc <.do_clear_bss_start>:
  fc:	ad 31       	cpi	r26, 0x1D	; 29
  fe:	b2 07       	cpc	r27, r18
 100:	e1 f7       	brne	.-8      	; 0xfa <.do_clear_bss_loop>
 102:	38 d1       	rcall	.+624    	; 0x374 <main>
 104:	69 c1       	rjmp	.+722    	; 0x3d8 <_exit>

00000106 <__bad_interrupt>:
 106:	7c cf       	rjmp	.-264    	; 0x0 <__vectors>

00000108 <fnd_write>:
 108:	9f b7       	in	r25, 0x3f	; 63
 10a:	f8 94       	cli
 10c:	84 bb       	out	0x14, r24	; 20
 10e:	68 b9       	out	0x08, r22	; 8
 110:	87 e0       	ldi	r24, 0x07	; 7
 112:	84 bb       	out	0x14, r24	; 20
 114:	99 23       	and	r25, r25
 116:	0c f4       	brge	.+2      	; 0x11a <fnd_write+0x12>
 118:	78 94       	sei
 11a:	08 95       	ret

0000011c <fnd_clear_all>:
 11c:	60 e0       	ldi	r22, 0x00	; 0
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	f3 df       	rcall	.-26     	; 0x108 <fnd_write>
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	f0 df       	rcall	.-32     	; 0x108 <fnd_write>
 128:	60 e0       	ldi	r22, 0x00	; 0
 12a:	82 e0       	ldi	r24, 0x02	; 2
 12c:	ed cf       	rjmp	.-38     	; 0x108 <fnd_write>
 12e:	08 95       	ret

00000130 <fnd_write_number>:
 130:	e6 2f       	mov	r30, r22
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	e8 5f       	subi	r30, 0xF8	; 248
 136:	fd 4f       	sbci	r31, 0xFD	; 253
 138:	90 e8       	ldi	r25, 0x80	; 128
 13a:	49 9f       	mul	r20, r25
 13c:	a0 01       	movw	r20, r0
 13e:	11 24       	eor	r1, r1
 140:	60 81       	ld	r22, Z
 142:	64 2b       	or	r22, r20
 144:	e1 cf       	rjmp	.-62     	; 0x108 <fnd_write>
 146:	08 95       	ret

00000148 <fnd_write_numbers>:
 148:	0f 93       	push	r16
 14a:	1f 93       	push	r17
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
 150:	8c 01       	movw	r16, r24
 152:	9c 01       	movw	r18, r24
 154:	ad ec       	ldi	r26, 0xCD	; 205
 156:	bc ec       	ldi	r27, 0xCC	; 204
 158:	30 d1       	rcall	.+608    	; 0x3ba <__umulhisi3>
 15a:	ac 01       	movw	r20, r24
 15c:	56 95       	lsr	r21
 15e:	47 95       	ror	r20
 160:	56 95       	lsr	r21
 162:	47 95       	ror	r20
 164:	56 95       	lsr	r21
 166:	47 95       	ror	r20
 168:	9a 01       	movw	r18, r20
 16a:	22 0f       	add	r18, r18
 16c:	33 1f       	adc	r19, r19
 16e:	ca 01       	movw	r24, r20
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	88 0f       	add	r24, r24
 17a:	99 1f       	adc	r25, r25
 17c:	82 0f       	add	r24, r18
 17e:	93 1f       	adc	r25, r19
 180:	f8 01       	movw	r30, r16
 182:	e8 1b       	sub	r30, r24
 184:	f9 0b       	sbc	r31, r25
 186:	9a 01       	movw	r18, r20
 188:	18 d1       	rcall	.+560    	; 0x3ba <__umulhisi3>
 18a:	96 95       	lsr	r25
 18c:	87 95       	ror	r24
 18e:	96 95       	lsr	r25
 190:	87 95       	ror	r24
 192:	96 95       	lsr	r25
 194:	87 95       	ror	r24
 196:	9c 01       	movw	r18, r24
 198:	22 0f       	add	r18, r18
 19a:	33 1f       	adc	r19, r19
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	88 0f       	add	r24, r24
 1a6:	99 1f       	adc	r25, r25
 1a8:	82 0f       	add	r24, r18
 1aa:	93 1f       	adc	r25, r19
 1ac:	ea 01       	movw	r28, r20
 1ae:	c8 1b       	sub	r28, r24
 1b0:	d9 0b       	sbc	r29, r25
 1b2:	0a 30       	cpi	r16, 0x0A	; 10
 1b4:	11 05       	cpc	r17, r1
 1b6:	58 f4       	brcc	.+22     	; 0x1ce <fnd_write_numbers+0x86>
 1b8:	40 e0       	ldi	r20, 0x00	; 0
 1ba:	6e 2f       	mov	r22, r30
 1bc:	80 e0       	ldi	r24, 0x00	; 0
 1be:	b8 df       	rcall	.-144    	; 0x130 <fnd_write_number>
 1c0:	60 e0       	ldi	r22, 0x00	; 0
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	a1 df       	rcall	.-190    	; 0x108 <fnd_write>
 1c6:	60 e0       	ldi	r22, 0x00	; 0
 1c8:	82 e0       	ldi	r24, 0x02	; 2
 1ca:	9e df       	rcall	.-196    	; 0x108 <fnd_write>
 1cc:	22 c0       	rjmp	.+68     	; 0x212 <fnd_write_numbers+0xca>
 1ce:	04 36       	cpi	r16, 0x64	; 100
 1d0:	11 05       	cpc	r17, r1
 1d2:	48 f4       	brcc	.+18     	; 0x1e6 <fnd_write_numbers+0x9e>
 1d4:	40 e0       	ldi	r20, 0x00	; 0
 1d6:	6e 2f       	mov	r22, r30
 1d8:	80 e0       	ldi	r24, 0x00	; 0
 1da:	aa df       	rcall	.-172    	; 0x130 <fnd_write_number>
 1dc:	40 e0       	ldi	r20, 0x00	; 0
 1de:	6c 2f       	mov	r22, r28
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	a6 df       	rcall	.-180    	; 0x130 <fnd_write_number>
 1e4:	16 c0       	rjmp	.+44     	; 0x212 <fnd_write_numbers+0xca>
 1e6:	40 e0       	ldi	r20, 0x00	; 0
 1e8:	6e 2f       	mov	r22, r30
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	a1 df       	rcall	.-190    	; 0x130 <fnd_write_number>
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	6c 2f       	mov	r22, r28
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	9d df       	rcall	.-198    	; 0x130 <fnd_write_number>
 1f6:	98 01       	movw	r18, r16
 1f8:	36 95       	lsr	r19
 1fa:	27 95       	ror	r18
 1fc:	36 95       	lsr	r19
 1fe:	27 95       	ror	r18
 200:	ab e7       	ldi	r26, 0x7B	; 123
 202:	b4 e1       	ldi	r27, 0x14	; 20
 204:	da d0       	rcall	.+436    	; 0x3ba <__umulhisi3>
 206:	96 95       	lsr	r25
 208:	87 95       	ror	r24
 20a:	40 e0       	ldi	r20, 0x00	; 0
 20c:	68 2f       	mov	r22, r24
 20e:	82 e0       	ldi	r24, 0x02	; 2
 210:	8f df       	rcall	.-226    	; 0x130 <fnd_write_number>
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	08 95       	ret

0000021c <led_write>:
 21c:	9f b7       	in	r25, 0x3f	; 63
 21e:	f8 94       	cli
 220:	23 e0       	ldi	r18, 0x03	; 3
 222:	24 bb       	out	0x14, r18	; 20
 224:	88 b9       	out	0x08, r24	; 8
 226:	87 e0       	ldi	r24, 0x07	; 7
 228:	84 bb       	out	0x14, r24	; 20
 22a:	99 23       	and	r25, r25
 22c:	0c f4       	brge	.+2      	; 0x230 <led_write+0x14>
 22e:	78 94       	sei
 230:	08 95       	ret

00000232 <fnd_init>:
 232:	8f ef       	ldi	r24, 0xFF	; 255
 234:	87 b9       	out	0x07, r24	; 7
 236:	87 e0       	ldi	r24, 0x07	; 7
 238:	83 bb       	out	0x13, r24	; 19
 23a:	24 9a       	sbi	0x04, 4	; 4
 23c:	6f df       	rcall	.-290    	; 0x11c <fnd_clear_all>
 23e:	8f ef       	ldi	r24, 0xFF	; 255
 240:	ed cf       	rjmp	.-38     	; 0x21c <led_write>
 242:	08 95       	ret

00000244 <__vector_9>:
uint8_t led_idx;

uint8_t prev_sw3;
uint8_t prev_sw4;

ISR(PCINT0_vect){
 244:	1f 92       	push	r1
 246:	0f 92       	push	r0
 248:	0f b6       	in	r0, 0x3f	; 63
 24a:	0f 92       	push	r0
 24c:	11 24       	eor	r1, r1
 24e:	0b b6       	in	r0, 0x3b	; 59
 250:	0f 92       	push	r0
 252:	2f 93       	push	r18
 254:	3f 93       	push	r19
 256:	4f 93       	push	r20
 258:	5f 93       	push	r21
 25a:	6f 93       	push	r22
 25c:	7f 93       	push	r23
 25e:	8f 93       	push	r24
 260:	9f 93       	push	r25
 262:	af 93       	push	r26
 264:	bf 93       	push	r27
 266:	ef 93       	push	r30
 268:	ff 93       	push	r31
	uint8_t curr_sw3 = PINB&_BV(PB5);
 26a:	53 b1       	in	r21, 0x03	; 3
 26c:	50 72       	andi	r21, 0x20	; 32
	uint8_t curr_sw4 = PINB&_BV(PB6);
 26e:	43 b1       	in	r20, 0x03	; 3
 270:	40 74       	andi	r20, 0x40	; 64
	
	if(PINB&_BV(PB5)){
 272:	1d 9b       	sbis	0x03, 5	; 3
 274:	29 c0       	rjmp	.+82     	; 0x2c8 <__vector_9+0x84>
		if(prev_sw3 != curr_sw3)
 276:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <prev_sw3>
 27a:	58 17       	cp	r21, r24
 27c:	29 f1       	breq	.+74     	; 0x2c8 <__vector_9+0x84>
			fnd_num = (fnd_num+1000-1)%1000;
 27e:	e0 91 19 02 	lds	r30, 0x0219	; 0x800219 <fnd_num>
 282:	f0 91 1a 02 	lds	r31, 0x021A	; 0x80021a <fnd_num+0x1>
 286:	e9 51       	subi	r30, 0x19	; 25
 288:	fc 4f       	sbci	r31, 0xFC	; 252
 28a:	9f 01       	movw	r18, r30
 28c:	36 95       	lsr	r19
 28e:	27 95       	ror	r18
 290:	36 95       	lsr	r19
 292:	27 95       	ror	r18
 294:	36 95       	lsr	r19
 296:	27 95       	ror	r18
 298:	a5 ec       	ldi	r26, 0xC5	; 197
 29a:	b0 e2       	ldi	r27, 0x20	; 32
 29c:	8e d0       	rcall	.+284    	; 0x3ba <__umulhisi3>
 29e:	92 95       	swap	r25
 2a0:	82 95       	swap	r24
 2a2:	8f 70       	andi	r24, 0x0F	; 15
 2a4:	89 27       	eor	r24, r25
 2a6:	9f 70       	andi	r25, 0x0F	; 15
 2a8:	89 27       	eor	r24, r25
 2aa:	68 ee       	ldi	r22, 0xE8	; 232
 2ac:	73 e0       	ldi	r23, 0x03	; 3
 2ae:	86 9f       	mul	r24, r22
 2b0:	90 01       	movw	r18, r0
 2b2:	87 9f       	mul	r24, r23
 2b4:	30 0d       	add	r19, r0
 2b6:	96 9f       	mul	r25, r22
 2b8:	30 0d       	add	r19, r0
 2ba:	11 24       	eor	r1, r1
 2bc:	e2 1b       	sub	r30, r18
 2be:	f3 0b       	sbc	r31, r19
 2c0:	f0 93 1a 02 	sts	0x021A, r31	; 0x80021a <fnd_num+0x1>
 2c4:	e0 93 19 02 	sts	0x0219, r30	; 0x800219 <fnd_num>
	}
	
	if(PINB&_BV(PB6)){
 2c8:	1e 9b       	sbis	0x03, 6	; 3
 2ca:	28 c0       	rjmp	.+80     	; 0x31c <__vector_9+0xd8>
		if(prev_sw4 != curr_sw4)
 2cc:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <__data_end>
 2d0:	48 17       	cp	r20, r24
 2d2:	21 f1       	breq	.+72     	; 0x31c <__vector_9+0xd8>
			fnd_num = (fnd_num+1)%1000;	
 2d4:	e0 91 19 02 	lds	r30, 0x0219	; 0x800219 <fnd_num>
 2d8:	f0 91 1a 02 	lds	r31, 0x021A	; 0x80021a <fnd_num+0x1>
 2dc:	31 96       	adiw	r30, 0x01	; 1
 2de:	9f 01       	movw	r18, r30
 2e0:	36 95       	lsr	r19
 2e2:	27 95       	ror	r18
 2e4:	36 95       	lsr	r19
 2e6:	27 95       	ror	r18
 2e8:	36 95       	lsr	r19
 2ea:	27 95       	ror	r18
 2ec:	a5 ec       	ldi	r26, 0xC5	; 197
 2ee:	b0 e2       	ldi	r27, 0x20	; 32
 2f0:	64 d0       	rcall	.+200    	; 0x3ba <__umulhisi3>
 2f2:	92 95       	swap	r25
 2f4:	82 95       	swap	r24
 2f6:	8f 70       	andi	r24, 0x0F	; 15
 2f8:	89 27       	eor	r24, r25
 2fa:	9f 70       	andi	r25, 0x0F	; 15
 2fc:	89 27       	eor	r24, r25
 2fe:	68 ee       	ldi	r22, 0xE8	; 232
 300:	73 e0       	ldi	r23, 0x03	; 3
 302:	86 9f       	mul	r24, r22
 304:	90 01       	movw	r18, r0
 306:	87 9f       	mul	r24, r23
 308:	30 0d       	add	r19, r0
 30a:	96 9f       	mul	r25, r22
 30c:	30 0d       	add	r19, r0
 30e:	11 24       	eor	r1, r1
 310:	e2 1b       	sub	r30, r18
 312:	f3 0b       	sbc	r31, r19
 314:	f0 93 1a 02 	sts	0x021A, r31	; 0x80021a <fnd_num+0x1>
 318:	e0 93 19 02 	sts	0x0219, r30	; 0x800219 <fnd_num>
	}
	prev_sw3 = curr_sw3;
 31c:	50 93 1b 02 	sts	0x021B, r21	; 0x80021b <prev_sw3>
	prev_sw4 = curr_sw4;
 320:	40 93 18 02 	sts	0x0218, r20	; 0x800218 <__data_end>
}
 324:	ff 91       	pop	r31
 326:	ef 91       	pop	r30
 328:	bf 91       	pop	r27
 32a:	af 91       	pop	r26
 32c:	9f 91       	pop	r25
 32e:	8f 91       	pop	r24
 330:	7f 91       	pop	r23
 332:	6f 91       	pop	r22
 334:	5f 91       	pop	r21
 336:	4f 91       	pop	r20
 338:	3f 91       	pop	r19
 33a:	2f 91       	pop	r18
 33c:	0f 90       	pop	r0
 33e:	0b be       	out	0x3b, r0	; 59
 340:	0f 90       	pop	r0
 342:	0f be       	out	0x3f, r0	; 63
 344:	0f 90       	pop	r0
 346:	1f 90       	pop	r1
 348:	18 95       	reti

0000034a <ioport_init>:

void ioport_init(void)
{
	DDRB |= _BV(LED_COLOR);
 34a:	24 9a       	sbi	0x04, 4	; 4
	DDRC |= _BV(LED1) | _BV(LED2) | _BV(LED3) | _BV(LED4);
 34c:	87 b1       	in	r24, 0x07	; 7
 34e:	8f 60       	ori	r24, 0x0F	; 15
 350:	87 b9       	out	0x07, r24	; 7
	PORTE |= _BV(SW2);
 352:	77 9a       	sbi	0x0e, 7	; 14
	PORTD |= _BV(SW3) | _BV(SW4);
 354:	8b b1       	in	r24, 0x0b	; 11
 356:	88 61       	ori	r24, 0x18	; 24
 358:	8b b9       	out	0x0b, r24	; 11
 35a:	08 95       	ret

0000035c <interrupt_init>:
}

void interrupt_init(void){
	PCMSK0 |= _BV(PCINT5) | _BV(PCINT6); // PCINT0's pins masking to enable
 35c:	eb e6       	ldi	r30, 0x6B	; 107
 35e:	f0 e0       	ldi	r31, 0x00	; 0
 360:	80 81       	ld	r24, Z
 362:	80 66       	ori	r24, 0x60	; 96
 364:	80 83       	st	Z, r24
	PCICR |= _BV(PCIE0); // PCINT0 control register enable
 366:	e8 e6       	ldi	r30, 0x68	; 104
 368:	f0 e0       	ldi	r31, 0x00	; 0
 36a:	80 81       	ld	r24, Z
 36c:	81 60       	ori	r24, 0x01	; 1
 36e:	80 83       	st	Z, r24
	sei();
 370:	78 94       	sei
 372:	08 95       	ret

00000374 <main>:
}

int main(void){ 

	ioport_init();
 374:	ea df       	rcall	.-44     	; 0x34a <ioport_init>
	interrupt_init();
 376:	f2 df       	rcall	.-28     	; 0x35c <interrupt_init>
	fnd_init();
 378:	5c df       	rcall	.-328    	; 0x232 <fnd_init>
	
	led_write(0xff);
 37a:	8f ef       	ldi	r24, 0xFF	; 255
 37c:	4f df       	rcall	.-354    	; 0x21c <led_write>
	fnd_write_numbers(0);
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	e2 de       	rcall	.-572    	; 0x148 <fnd_write_numbers>
    
	while (1) 
    {
		fnd_write_numbers(fnd_num);
 384:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <fnd_num>
 388:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <fnd_num+0x1>
 38c:	dd de       	rcall	.-582    	; 0x148 <fnd_write_numbers>
 38e:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <led_idx>
		led_write(led_pattern[led_idx++%8]);
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	8e 0f       	add	r24, r30
 396:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <led_idx>
 39a:	e7 70       	andi	r30, 0x07	; 7
 39c:	f0 e0       	ldi	r31, 0x00	; 0
 39e:	e0 50       	subi	r30, 0x00	; 0
 3a0:	fe 4f       	sbci	r31, 0xFE	; 254
 3a2:	80 81       	ld	r24, Z
 3a4:	3b df       	rcall	.-394    	; 0x21c <led_write>
 3a6:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3a8:	84 e3       	ldi	r24, 0x34	; 52
 3aa:	9c e0       	ldi	r25, 0x0C	; 12
 3ac:	21 50       	subi	r18, 0x01	; 1
 3ae:	80 40       	sbci	r24, 0x00	; 0
 3b0:	90 40       	sbci	r25, 0x00	; 0
 3b2:	e1 f7       	brne	.-8      	; 0x3ac <main+0x38>
 3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <main+0x42>
 3b6:	00 00       	nop
 3b8:	e5 cf       	rjmp	.-54     	; 0x384 <main+0x10>

000003ba <__umulhisi3>:
 3ba:	a2 9f       	mul	r26, r18
 3bc:	b0 01       	movw	r22, r0
 3be:	b3 9f       	mul	r27, r19
 3c0:	c0 01       	movw	r24, r0
 3c2:	a3 9f       	mul	r26, r19
 3c4:	70 0d       	add	r23, r0
 3c6:	81 1d       	adc	r24, r1
 3c8:	11 24       	eor	r1, r1
 3ca:	91 1d       	adc	r25, r1
 3cc:	b2 9f       	mul	r27, r18
 3ce:	70 0d       	add	r23, r0
 3d0:	81 1d       	adc	r24, r1
 3d2:	11 24       	eor	r1, r1
 3d4:	91 1d       	adc	r25, r1
 3d6:	08 95       	ret

000003d8 <_exit>:
 3d8:	f8 94       	cli

000003da <__stop_program>:
 3da:	ff cf       	rjmp	.-2      	; 0x3da <__stop_program>
