
TimerBasic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000001e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000018c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001e0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000210  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000250  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b14  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a0b  00000000  00000000  00000da4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000305  00000000  00000000  000017af  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00001ab4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004e4  00000000  00000000  00001b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000049  00000000  00000000  00002010  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002059  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	65 c0       	rjmp	.+202    	; 0xcc <__ctors_end>
   2:	00 00       	nop
   4:	78 c0       	rjmp	.+240    	; 0xf6 <__bad_interrupt>
   6:	00 00       	nop
   8:	76 c0       	rjmp	.+236    	; 0xf6 <__bad_interrupt>
   a:	00 00       	nop
   c:	74 c0       	rjmp	.+232    	; 0xf6 <__bad_interrupt>
   e:	00 00       	nop
  10:	72 c0       	rjmp	.+228    	; 0xf6 <__bad_interrupt>
  12:	00 00       	nop
  14:	70 c0       	rjmp	.+224    	; 0xf6 <__bad_interrupt>
  16:	00 00       	nop
  18:	6e c0       	rjmp	.+220    	; 0xf6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6c c0       	rjmp	.+216    	; 0xf6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6a c0       	rjmp	.+212    	; 0xf6 <__bad_interrupt>
  22:	00 00       	nop
  24:	68 c0       	rjmp	.+208    	; 0xf6 <__bad_interrupt>
  26:	00 00       	nop
  28:	66 c0       	rjmp	.+204    	; 0xf6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	64 c0       	rjmp	.+200    	; 0xf6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	62 c0       	rjmp	.+196    	; 0xf6 <__bad_interrupt>
  32:	00 00       	nop
  34:	60 c0       	rjmp	.+192    	; 0xf6 <__bad_interrupt>
  36:	00 00       	nop
  38:	5e c0       	rjmp	.+188    	; 0xf6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5c c0       	rjmp	.+184    	; 0xf6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5a c0       	rjmp	.+180    	; 0xf6 <__bad_interrupt>
  42:	00 00       	nop
  44:	58 c0       	rjmp	.+176    	; 0xf6 <__bad_interrupt>
  46:	00 00       	nop
  48:	56 c0       	rjmp	.+172    	; 0xf6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	54 c0       	rjmp	.+168    	; 0xf6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	52 c0       	rjmp	.+164    	; 0xf6 <__bad_interrupt>
  52:	00 00       	nop
  54:	50 c0       	rjmp	.+160    	; 0xf6 <__bad_interrupt>
  56:	00 00       	nop
  58:	4e c0       	rjmp	.+156    	; 0xf6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4c c0       	rjmp	.+152    	; 0xf6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4a c0       	rjmp	.+148    	; 0xf6 <__bad_interrupt>
  62:	00 00       	nop
  64:	48 c0       	rjmp	.+144    	; 0xf6 <__bad_interrupt>
  66:	00 00       	nop
  68:	46 c0       	rjmp	.+140    	; 0xf6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	44 c0       	rjmp	.+136    	; 0xf6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	42 c0       	rjmp	.+132    	; 0xf6 <__bad_interrupt>
  72:	00 00       	nop
  74:	40 c0       	rjmp	.+128    	; 0xf6 <__bad_interrupt>
  76:	00 00       	nop
  78:	3e c0       	rjmp	.+124    	; 0xf6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3c c0       	rjmp	.+120    	; 0xf6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3a c0       	rjmp	.+116    	; 0xf6 <__bad_interrupt>
  82:	00 00       	nop
  84:	38 c0       	rjmp	.+112    	; 0xf6 <__bad_interrupt>
  86:	00 00       	nop
  88:	36 c0       	rjmp	.+108    	; 0xf6 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	34 c0       	rjmp	.+104    	; 0xf6 <__bad_interrupt>
  8e:	00 00       	nop
  90:	32 c0       	rjmp	.+100    	; 0xf6 <__bad_interrupt>
  92:	00 00       	nop
  94:	30 c0       	rjmp	.+96     	; 0xf6 <__bad_interrupt>
  96:	00 00       	nop
  98:	2e c0       	rjmp	.+92     	; 0xf6 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2c c0       	rjmp	.+88     	; 0xf6 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2a c0       	rjmp	.+84     	; 0xf6 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	28 c0       	rjmp	.+80     	; 0xf6 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	26 c0       	rjmp	.+76     	; 0xf6 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	24 c0       	rjmp	.+72     	; 0xf6 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	22 c0       	rjmp	.+68     	; 0xf6 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	20 c0       	rjmp	.+64     	; 0xf6 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1e c0       	rjmp	.+60     	; 0xf6 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__vector_47>
  be:	00 00       	nop
  c0:	1a c0       	rjmp	.+52     	; 0xf6 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	18 c0       	rjmp	.+48     	; 0xf6 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	16 c0       	rjmp	.+44     	; 0xf6 <__bad_interrupt>
	...

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d1 e2       	ldi	r29, 0x21	; 33
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
  d8:	12 e0       	ldi	r17, 0x02	; 2
  da:	a0 e0       	ldi	r26, 0x00	; 0
  dc:	b2 e0       	ldi	r27, 0x02	; 2
  de:	ec e8       	ldi	r30, 0x8C	; 140
  e0:	f1 e0       	ldi	r31, 0x01	; 1
  e2:	00 e0       	ldi	r16, 0x00	; 0
  e4:	0b bf       	out	0x3b, r16	; 59
  e6:	02 c0       	rjmp	.+4      	; 0xec <__do_copy_data+0x14>
  e8:	07 90       	elpm	r0, Z+
  ea:	0d 92       	st	X+, r0
  ec:	a0 30       	cpi	r26, 0x00	; 0
  ee:	b1 07       	cpc	r27, r17
  f0:	d9 f7       	brne	.-10     	; 0xe8 <__do_copy_data+0x10>
  f2:	46 d0       	rcall	.+140    	; 0x180 <main>
  f4:	49 c0       	rjmp	.+146    	; 0x188 <_exit>

000000f6 <__bad_interrupt>:
  f6:	84 cf       	rjmp	.-248    	; 0x0 <__vectors>

000000f8 <__vector_47>:

#include <avr/io.h>
#include "board.h"
#include "fnd.h"

ISR(TIMER5_COMPA_vect){
  f8:	1f 92       	push	r1
  fa:	0f 92       	push	r0
  fc:	0f b6       	in	r0, 0x3f	; 63
  fe:	0f 92       	push	r0
 100:	11 24       	eor	r1, r1
 102:	8f 93       	push	r24
 104:	9f 93       	push	r25
	PORTB ^= _BV(PB5);
 106:	95 b1       	in	r25, 0x05	; 5
 108:	80 e2       	ldi	r24, 0x20	; 32
 10a:	89 27       	eor	r24, r25
 10c:	85 b9       	out	0x05, r24	; 5
}
 10e:	9f 91       	pop	r25
 110:	8f 91       	pop	r24
 112:	0f 90       	pop	r0
 114:	0f be       	out	0x3f, r0	; 63
 116:	0f 90       	pop	r0
 118:	1f 90       	pop	r1
 11a:	18 95       	reti

0000011c <timer_init>:

void timer_init(void){
	TCCR3A |= _BV(COM3A0) | _BV(COM3B0); // Comapare Output Mode setting: toggle 
 11c:	e0 e9       	ldi	r30, 0x90	; 144
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	80 65       	ori	r24, 0x50	; 80
 124:	80 83       	st	Z, r24
	TCCR3B |= _BV(WGM32) |_BV(CS31); // 16 bit timer 3, CTC mode , 250 clk, prescaler 8
 126:	e1 e9       	ldi	r30, 0x91	; 145
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	8a 60       	ori	r24, 0x0A	; 10
 12e:	80 83       	st	Z, r24
	TIFR3 = _BV(OCF3A); // Compare Match flag set
 130:	82 e0       	ldi	r24, 0x02	; 2
 132:	88 bb       	out	0x18, r24	; 24
	
	OCR3A = 249;
 134:	89 ef       	ldi	r24, 0xF9	; 249
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 13c:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	OCR3B = 124;
 140:	8c e7       	ldi	r24, 0x7C	; 124
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 148:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
	
	TCCR5B |= _BV(WGM52)| _BV(CS51) | _BV(CS50);// 16 bit timer 5, CTC mode, prescaler 64
 14c:	e1 e2       	ldi	r30, 0x21	; 33
 14e:	f1 e0       	ldi	r31, 0x01	; 1
 150:	80 81       	ld	r24, Z
 152:	8b 60       	ori	r24, 0x0B	; 11
 154:	80 83       	st	Z, r24
	TIMSK5 |= _BV(TOIE5); // overflow interrupt enable
 156:	e3 e7       	ldi	r30, 0x73	; 115
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	81 60       	ori	r24, 0x01	; 1
 15e:	80 83       	st	Z, r24
	
	// 100 = (F_CPU/prescaler-n)/1+OCR5A_value
	OCR5A = F_CPU/(64*100) - 1;
 160:	83 ec       	ldi	r24, 0xC3	; 195
 162:	99 e0       	ldi	r25, 0x09	; 9
 164:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x7e0129>
 168:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x7e0128>
 16c:	08 95       	ret

0000016e <ioport_init>:
}

void ioport_init(void){
	DDRB |= _BV(PB5);
 16e:	84 b1       	in	r24, 0x04	; 4
 170:	80 62       	ori	r24, 0x20	; 32
 172:	84 b9       	out	0x04, r24	; 4
	DDRE |= _BV(SOUND_OUT)|_BV(PE4);
 174:	8d b1       	in	r24, 0x0d	; 13
 176:	88 61       	ori	r24, 0x18	; 24
 178:	8d b9       	out	0x0d, r24	; 13
 17a:	08 95       	ret

0000017c <interrupt_init>:
}

void interrupt_init(void){
	sei();
 17c:	78 94       	sei
 17e:	08 95       	ret

00000180 <main>:


int main()
{
	
	ioport_init();
 180:	f6 df       	rcall	.-20     	; 0x16e <ioport_init>
	interrupt_init();
 182:	fc df       	rcall	.-8      	; 0x17c <interrupt_init>
	timer_init();
 184:	cb df       	rcall	.-106    	; 0x11c <timer_init>
 186:	ff cf       	rjmp	.-2      	; 0x186 <main+0x6>

00000188 <_exit>:
 188:	f8 94       	cli

0000018a <__stop_program>:
 18a:	ff cf       	rjmp	.-2      	; 0x18a <__stop_program>
